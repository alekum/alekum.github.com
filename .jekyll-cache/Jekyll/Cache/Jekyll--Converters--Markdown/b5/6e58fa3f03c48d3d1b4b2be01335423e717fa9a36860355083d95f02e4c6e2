I"n<p>In the previous part, we’ve discussed the problem that was presented in <code class="highlighter-rouge">RedBaron</code>. Today I want to show you my old work, my old little investigation about another strange bug(or feature?) in <code class="highlighter-rouge">Baron</code>.<br />
<code class="highlighter-rouge">Baron</code> is a part of <code class="highlighter-rouge">RedBaron</code> library, literally, <code class="highlighter-rouge">RedBaron</code> relies on <code class="highlighter-rouge">Baron</code> Full Syntax Tree which it’s giving for next manipulations.
<code class="highlighter-rouge">Baron</code> had a problem with CommentNode’s position in the FST tree.
This bug broke RedBaron’s nodes recognition.</p>

<h3 id="commentnodes-position-problem">CommentNode’s position problem</h3>

<p>Below I’ll tell you a story about it and start from examples.
Let’s roll sleeves up and get down to business.</p>

<!--more-->

<p>Take a look at examples:</p>

<ul>
  <li>First</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"main"</span><span class="p">)</span>

    <span class="c1"># cmt
</span>
    <span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
        <span class="n">main</span><span class="p">()</span>
</code></pre></div></div>

<ul>
  <li>Second</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"main"</span><span class="p">)</span>

    <span class="n">a</span> <span class="o">=</span> <span class="mi">1</span>
    <span class="c1"># cmt
</span>
    <span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
        <span class="n">main</span><span class="p">()</span>
</code></pre></div></div>

<p><strong>I used dump method (<code class="highlighter-rouge">.help()</code>) provided by the RedBaron to get the presentation of internal tree structures</strong></p>

<ul>
  <li>Tree for the first case</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mi">0</span> <span class="o">-----------------------------------------------------</span>
<span class="n">DefNode</span><span class="p">()</span>
  <span class="c1"># identifiers: def, def_, defnode, funcdef, funcdef_
</span>  <span class="c1"># default test value: name
</span>  <span class="n">name</span><span class="o">=</span><span class="s">u'main'</span>
  <span class="n">decorators</span> <span class="o">-&gt;</span>
  <span class="n">arguments</span> <span class="o">-&gt;</span>
  <span class="n">value</span> <span class="o">-&gt;</span>
    <span class="o">*</span> <span class="n">PrintNode</span><span class="p">()</span>
        <span class="c1"># identifiers: print, print_, printnode
</span>        <span class="n">destination</span> <span class="o">-&gt;</span>
          <span class="bp">None</span>
        <span class="n">value</span> <span class="o">-&gt;</span>
          <span class="o">*</span> <span class="n">AssociativeParenthesisNode</span><span class="p">()</span>
              <span class="c1"># identifiers: associative_parenthesis, associative_parenthesis_, associativeparenthesis, associativeparenthesisnode
</span>              <span class="n">value</span> <span class="o">-&gt;</span>
                <span class="n">StringNode</span><span class="p">()</span>
                  <span class="c1"># identifiers: string, string_, stringnode
</span>                  <span class="n">value</span><span class="o">=</span><span class="s">u'"main"'</span>
    <span class="o">*</span> <span class="n">EndlNode</span><span class="p">()</span>
        <span class="c1"># identifiers: endl, endl_, endlnode
</span>        <span class="n">value</span><span class="o">=</span><span class="s">u'</span><span class="se">\n</span><span class="s">'</span>
        <span class="n">indent</span><span class="o">=</span><span class="s">''</span>
    <span class="o">*</span> <span class="n">CommentNode</span><span class="p">()</span>
        <span class="c1"># identifiers: comment, comment_, commentnode
</span>        <span class="n">value</span><span class="o">=</span><span class="s">u'# cmt'</span>
    <span class="o">*</span> <span class="n">EndlNode</span><span class="p">()</span>
        <span class="c1"># identifiers: endl, endl_, endlnode
</span>        <span class="n">value</span><span class="o">=</span><span class="s">u'</span><span class="se">\n</span><span class="s">'</span>
        <span class="n">indent</span><span class="o">=</span><span class="s">''</span>
<span class="mi">1</span> <span class="o">-----------------------------------------------------</span>
<span class="n">IfelseblockNode</span><span class="p">()</span>
  <span class="c1"># identifiers: ifelseblock, ifelseblock_, ifelseblocknode
</span>  <span class="n">value</span> <span class="o">-&gt;</span>
    <span class="o">*</span> <span class="n">IfNode</span><span class="p">()</span>
        <span class="c1"># identifiers: if, if_, ifnode
</span>        <span class="n">test</span> <span class="o">-&gt;</span>
          <span class="n">ComparisonNode</span><span class="p">()</span>
            <span class="c1"># identifiers: comparison, comparison_, comparisonnode
</span>            <span class="n">first</span> <span class="o">-&gt;</span>
              <span class="n">NameNode</span><span class="p">()</span>
                <span class="c1"># identifiers: name, name_, namenode
</span>                <span class="n">value</span><span class="o">=</span><span class="s">u'__name__'</span>
            <span class="n">value</span> <span class="o">-&gt;</span>
              <span class="n">ComparisonOperatorNode</span><span class="p">()</span>
                <span class="c1"># identifiers: comparison_operator, comparison_operator_, comparisonoperator, comparisonoperatornode
</span>                <span class="n">first</span><span class="o">=</span><span class="s">u'=='</span>
                <span class="n">second</span><span class="o">=</span><span class="s">''</span>
            <span class="n">second</span> <span class="o">-&gt;</span>
              <span class="n">StringNode</span><span class="p">()</span>
                <span class="c1"># identifiers: string, string_, stringnode
</span>                <span class="n">value</span><span class="o">=</span><span class="s">u'"__main__"'</span>
        <span class="n">value</span> <span class="o">-&gt;</span>
          <span class="o">*</span> <span class="n">AtomtrailersNode</span><span class="p">()</span>
              <span class="c1"># identifiers: atomtrailers, atomtrailers_, atomtrailersnode
</span>              <span class="n">value</span> <span class="o">-&gt;</span>
                <span class="o">*</span> <span class="n">NameNode</span><span class="p">()</span>
                    <span class="c1"># identifiers: name, name_, namenode
</span>                    <span class="n">value</span><span class="o">=</span><span class="s">u'main'</span>
                <span class="o">*</span> <span class="n">CallNode</span><span class="p">()</span>
                    <span class="c1"># identifiers: call, call_, callnode
</span>                    <span class="n">value</span> <span class="o">-&gt;</span>
<span class="bp">None</span>
<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"main"</span><span class="p">)</span>

<span class="c1"># cmt
</span>
<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>

</code></pre></div></div>

<ul>
  <li>Tree for the second case</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mi">0</span> <span class="o">-----------------------------------------------------</span>
<span class="n">DefNode</span><span class="p">()</span>
  <span class="c1"># identifiers: def, def_, defnode, funcdef, funcdef_
</span>  <span class="c1"># default test value: name
</span>  <span class="n">name</span><span class="o">=</span><span class="s">u'main'</span>
  <span class="n">decorators</span> <span class="o">-&gt;</span>
  <span class="n">arguments</span> <span class="o">-&gt;</span>
  <span class="n">value</span> <span class="o">-&gt;</span>
    <span class="o">*</span> <span class="n">PrintNode</span><span class="p">()</span>
        <span class="c1"># identifiers: print, print_, printnode
</span>        <span class="n">destination</span> <span class="o">-&gt;</span>
          <span class="bp">None</span>
        <span class="n">value</span> <span class="o">-&gt;</span>
          <span class="o">*</span> <span class="n">AssociativeParenthesisNode</span><span class="p">()</span>
              <span class="c1"># identifiers: associative_parenthesis, associative_parenthesis_, associativeparenthesis, associativeparenthesisnode
</span>              <span class="n">value</span> <span class="o">-&gt;</span>
                <span class="n">StringNode</span><span class="p">()</span>
                  <span class="c1"># identifiers: string, string_, stringnode
</span>                  <span class="n">value</span><span class="o">=</span><span class="s">u'"main"'</span>
    <span class="o">*</span> <span class="n">EndlNode</span><span class="p">()</span>
        <span class="c1"># identifiers: endl, endl_, endlnode
</span>        <span class="n">value</span><span class="o">=</span><span class="s">u'</span><span class="se">\n</span><span class="s">'</span>
        <span class="n">indent</span><span class="o">=</span><span class="s">''</span>
<span class="mi">1</span> <span class="o">-----------------------------------------------------</span>
<span class="n">AssignmentNode</span><span class="p">()</span>
  <span class="c1"># identifiers: assign, assignment, assignment_, assignmentnode
</span>  <span class="n">operator</span><span class="o">=</span><span class="s">''</span>
  <span class="n">target</span> <span class="o">-&gt;</span>
    <span class="n">NameNode</span><span class="p">()</span>
      <span class="c1"># identifiers: name, name_, namenode
</span>      <span class="n">value</span><span class="o">=</span><span class="s">u'a'</span>
  <span class="n">value</span> <span class="o">-&gt;</span>
    <span class="n">IntNode</span><span class="p">()</span>
      <span class="c1"># identifiers: int, int_, intnode
</span>      <span class="n">value</span><span class="o">=</span><span class="s">u'1'</span>
<span class="mi">2</span> <span class="o">-----------------------------------------------------</span>
<span class="n">EndlNode</span><span class="p">()</span>
  <span class="c1"># identifiers: endl, endl_, endlnode
</span>  <span class="n">value</span><span class="o">=</span><span class="s">u'</span><span class="se">\n</span><span class="s">'</span>
  <span class="n">indent</span><span class="o">=</span><span class="s">''</span>
<span class="mi">3</span> <span class="o">-----------------------------------------------------</span>
<span class="n">CommentNode</span><span class="p">()</span>
  <span class="c1"># identifiers: comment, comment_, commentnode
</span>  <span class="n">value</span><span class="o">=</span><span class="s">u'# cmt'</span>
<span class="mi">4</span> <span class="o">-----------------------------------------------------</span>
<span class="n">EndlNode</span><span class="p">()</span>
  <span class="c1"># identifiers: endl, endl_, endlnode
</span>  <span class="n">value</span><span class="o">=</span><span class="s">u'</span><span class="se">\n</span><span class="s">'</span>
  <span class="n">indent</span><span class="o">=</span><span class="s">''</span>
<span class="mi">5</span> <span class="o">-----------------------------------------------------</span>
<span class="n">EndlNode</span><span class="p">()</span>
  <span class="c1"># identifiers: endl, endl_, endlnode
</span>  <span class="n">value</span><span class="o">=</span><span class="s">u'</span><span class="se">\n</span><span class="s">'</span>
  <span class="n">indent</span><span class="o">=</span><span class="s">''</span>
<span class="mi">6</span> <span class="o">-----------------------------------------------------</span>
<span class="n">IfelseblockNode</span><span class="p">()</span>
  <span class="c1"># identifiers: ifelseblock, ifelseblock_, ifelseblocknode
</span>  <span class="n">value</span> <span class="o">-&gt;</span>
    <span class="o">*</span> <span class="n">IfNode</span><span class="p">()</span>
        <span class="c1"># identifiers: if, if_, ifnode
</span>        <span class="n">test</span> <span class="o">-&gt;</span>
          <span class="n">ComparisonNode</span><span class="p">()</span>
            <span class="c1"># identifiers: comparison, comparison_, comparisonnode
</span>            <span class="n">first</span> <span class="o">-&gt;</span>
              <span class="n">NameNode</span><span class="p">()</span>
                <span class="c1"># identifiers: name, name_, namenode
</span>                <span class="n">value</span><span class="o">=</span><span class="s">u'__name__'</span>
            <span class="n">value</span> <span class="o">-&gt;</span>
              <span class="n">ComparisonOperatorNode</span><span class="p">()</span>
                <span class="c1"># identifiers: comparison_operator, comparison_operator_, comparisonoperator, comparisonoperatornode
</span>                <span class="n">first</span><span class="o">=</span><span class="s">u'=='</span>
                <span class="n">second</span><span class="o">=</span><span class="s">''</span>
            <span class="n">second</span> <span class="o">-&gt;</span>
              <span class="n">StringNode</span><span class="p">()</span>
                <span class="c1"># identifiers: string, string_, stringnode
</span>                <span class="n">value</span><span class="o">=</span><span class="s">u'"__main__"'</span>
        <span class="n">value</span> <span class="o">-&gt;</span>
          <span class="o">*</span> <span class="n">AtomtrailersNode</span><span class="p">()</span>
              <span class="c1"># identifiers: atomtrailers, atomtrailers_, atomtrailersnode
</span>              <span class="n">value</span> <span class="o">-&gt;</span>
                <span class="o">*</span> <span class="n">NameNode</span><span class="p">()</span>
                    <span class="c1"># identifiers: name, name_, namenode
</span>                    <span class="n">value</span><span class="o">=</span><span class="s">u'main'</span>
                <span class="o">*</span> <span class="n">CallNode</span><span class="p">()</span>
                    <span class="c1"># identifiers: call, call_, callnode
</span>                    <span class="n">value</span> <span class="o">-&gt;</span>
<span class="bp">None</span>
<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"main"</span><span class="p">)</span>

<span class="n">a</span> <span class="o">=</span> <span class="mi">1</span>
<span class="c1"># cmt
</span>
<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>

</code></pre></div></div>

<p>In the first excerpt what we see is not what we get - <code class="highlighter-rouge">CommentNode</code> is not in the right position.&lt;/br&gt;
The right position in the first example is out from the <code class="highlighter-rouge">DefNode</code> of <code class="highlighter-rouge">main()</code>. But it has been dumped(<code class="highlighter-rouge">.dumps()</code>) correctly.</p>

<p>Let me show you another example, what if I comment <code class="highlighter-rouge">a=1</code>:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mi">0</span> <span class="o">-----------------------------------------------------</span>
<span class="n">DefNode</span><span class="p">()</span>
  <span class="c1"># identifiers: def, def_, defnode, funcdef, funcdef_
</span>  <span class="c1"># default test value: name
</span>  <span class="n">name</span><span class="o">=</span><span class="s">u'main'</span>
  <span class="n">decorators</span> <span class="o">-&gt;</span>
  <span class="n">arguments</span> <span class="o">-&gt;</span>
  <span class="n">value</span> <span class="o">-&gt;</span>
    <span class="o">*</span> <span class="n">PrintNode</span><span class="p">()</span>
        <span class="c1"># identifiers: print, print_, printnode
</span>        <span class="n">destination</span> <span class="o">-&gt;</span>
          <span class="bp">None</span>
        <span class="n">value</span> <span class="o">-&gt;</span>
          <span class="o">*</span> <span class="n">AssociativeParenthesisNode</span><span class="p">()</span>
              <span class="c1"># identifiers: associative_parenthesis, associative_parenthesis_, associativeparenthesis, associativeparenthesisnode
</span>              <span class="n">value</span> <span class="o">-&gt;</span>
                <span class="n">StringNode</span><span class="p">()</span>
                  <span class="c1"># identifiers: string, string_, stringnode
</span>                  <span class="n">value</span><span class="o">=</span><span class="s">u'"main"'</span>
    <span class="o">*</span> <span class="n">EndlNode</span><span class="p">()</span>
        <span class="c1"># identifiers: endl, endl_, endlnode
</span>        <span class="n">value</span><span class="o">=</span><span class="s">u'</span><span class="se">\n</span><span class="s">'</span>
        <span class="n">indent</span><span class="o">=</span><span class="s">''</span>
    <span class="o">*</span> <span class="n">CommentNode</span><span class="p">()</span>
        <span class="c1"># identifiers: comment, comment_, commentnode
</span>        <span class="n">value</span><span class="o">=</span><span class="s">u'# a = 1'</span>
    <span class="o">*</span> <span class="n">CommentNode</span><span class="p">()</span>
        <span class="c1"># identifiers: comment, comment_, commentnode
</span>        <span class="n">value</span><span class="o">=</span><span class="s">u'# cmt'</span>
    <span class="o">*</span> <span class="n">EndlNode</span><span class="p">()</span>
        <span class="c1"># identifiers: endl, endl_, endlnode
</span>        <span class="n">value</span><span class="o">=</span><span class="s">u'</span><span class="se">\n</span><span class="s">'</span>
        <span class="n">indent</span><span class="o">=</span><span class="s">''</span>
<span class="mi">1</span> <span class="o">-----------------------------------------------------</span>
<span class="n">IfelseblockNode</span><span class="p">()</span>
  <span class="c1"># identifiers: ifelseblock, ifelseblock_, ifelseblocknode
</span>  <span class="n">value</span> <span class="o">-&gt;</span>
    <span class="o">*</span> <span class="n">IfNode</span><span class="p">()</span>
        <span class="c1"># identifiers: if, if_, ifnode
</span>        <span class="n">test</span> <span class="o">-&gt;</span>
          <span class="n">ComparisonNode</span><span class="p">()</span>
            <span class="c1"># identifiers: comparison, comparison_, comparisonnode
</span>            <span class="n">first</span> <span class="o">-&gt;</span>
              <span class="n">NameNode</span><span class="p">()</span>
                <span class="c1"># identifiers: name, name_, namenode
</span>                <span class="n">value</span><span class="o">=</span><span class="s">u'__name__'</span>
            <span class="n">value</span> <span class="o">-&gt;</span>
              <span class="n">ComparisonOperatorNode</span><span class="p">()</span>
                <span class="c1"># identifiers: comparison_operator, comparison_operator_, comparisonoperator, comparisonoperatornode
</span>                <span class="n">first</span><span class="o">=</span><span class="s">u'=='</span>
                <span class="n">second</span><span class="o">=</span><span class="s">''</span>
            <span class="n">second</span> <span class="o">-&gt;</span>
              <span class="n">StringNode</span><span class="p">()</span>
                <span class="c1"># identifiers: string, string_, stringnode
</span>                <span class="n">value</span><span class="o">=</span><span class="s">u'"__main__"'</span>
        <span class="n">value</span> <span class="o">-&gt;</span>
          <span class="o">*</span> <span class="n">AtomtrailersNode</span><span class="p">()</span>
              <span class="c1"># identifiers: atomtrailers, atomtrailers_, atomtrailersnode
</span>              <span class="n">value</span> <span class="o">-&gt;</span>
                <span class="o">*</span> <span class="n">NameNode</span><span class="p">()</span>
                    <span class="c1"># identifiers: name, name_, namenode
</span>                    <span class="n">value</span><span class="o">=</span><span class="s">u'main'</span>
                <span class="o">*</span> <span class="n">CallNode</span><span class="p">()</span>
                    <span class="c1"># identifiers: call, call_, callnode
</span>                    <span class="n">value</span> <span class="o">-&gt;</span>
<span class="bp">None</span>
<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"main"</span><span class="p">)</span>

<span class="c1"># a = 1
# cmt
</span>
<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>

</code></pre></div></div>

<p>Here we have the same issue like in the first case. Pay attention to the next fact that between two <code class="highlighter-rouge">CommentNode</code>s, there is no <code class="highlighter-rouge">EndlNode</code>. It has been missed.</p>

<p><strong>Let’s look on Baron’s FST for these cases:</strong></p>

<ul>
  <li>Baron’s FST for the first case</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[{</span><span class="s">'arguments'</span><span class="p">:</span> <span class="p">[],</span>
  <span class="s">'decorators'</span><span class="p">:</span> <span class="p">[],</span>
  <span class="s">'fifth_formatting'</span><span class="p">:</span> <span class="p">[],</span>
  <span class="s">'first_formatting'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'type'</span><span class="p">:</span> <span class="s">'space'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u' '</span><span class="p">}],</span>
  <span class="s">'fourth_formatting'</span><span class="p">:</span> <span class="p">[],</span>
  <span class="s">'name'</span><span class="p">:</span> <span class="s">u'main'</span><span class="p">,</span>
  <span class="s">'second_formatting'</span><span class="p">:</span> <span class="p">[],</span>
  <span class="s">'sixth_formatting'</span><span class="p">:</span> <span class="p">[],</span>
  <span class="s">'third_formatting'</span><span class="p">:</span> <span class="p">[],</span>
  <span class="s">'type'</span><span class="p">:</span> <span class="s">'def'</span><span class="p">,</span>
  <span class="s">'value'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span>
    <span class="s">'indent'</span><span class="p">:</span> <span class="s">u'    '</span><span class="p">,</span>
    <span class="s">'type'</span><span class="p">:</span> <span class="s">'endl'</span><span class="p">,</span>
    <span class="s">'value'</span><span class="p">:</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">},</span>
   <span class="p">{</span><span class="s">'destination'</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
    <span class="s">'destination_formatting'</span><span class="p">:</span> <span class="p">[],</span>
    <span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span>
    <span class="s">'type'</span><span class="p">:</span> <span class="s">'print'</span><span class="p">,</span>
    <span class="s">'value'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'first_formatting'</span><span class="p">:</span> <span class="p">[],</span>
      <span class="s">'fourth_formatting'</span><span class="p">:</span> <span class="p">[],</span>
      <span class="s">'second_formatting'</span><span class="p">:</span> <span class="p">[],</span>
      <span class="s">'third_formatting'</span><span class="p">:</span> <span class="p">[],</span>
      <span class="s">'type'</span><span class="p">:</span> <span class="s">'associative_parenthesis'</span><span class="p">,</span>
      <span class="s">'value'</span><span class="p">:</span> <span class="p">{</span><span class="s">'first_formatting'</span><span class="p">:</span> <span class="p">[],</span>
       <span class="s">'second_formatting'</span><span class="p">:</span> <span class="p">[],</span>
       <span class="s">'type'</span><span class="p">:</span> <span class="s">'string'</span><span class="p">,</span>
       <span class="s">'value'</span><span class="p">:</span> <span class="s">u'"main"'</span><span class="p">}}]},</span>
   <span class="p">{</span><span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span> <span class="s">'indent'</span><span class="p">:</span> <span class="s">''</span><span class="p">,</span> <span class="s">'type'</span><span class="p">:</span> <span class="s">'endl'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">},</span>
   <span class="p">{</span><span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span> <span class="s">'indent'</span><span class="p">:</span> <span class="s">''</span><span class="p">,</span> <span class="s">'type'</span><span class="p">:</span> <span class="s">'endl'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">}]},</span>
 <span class="p">{</span><span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span> <span class="s">'type'</span><span class="p">:</span> <span class="s">'comment'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'# cmt'</span><span class="p">},</span>
 <span class="p">{</span><span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span> <span class="s">'indent'</span><span class="p">:</span> <span class="s">''</span><span class="p">,</span> <span class="s">'type'</span><span class="p">:</span> <span class="s">'endl'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">},</span>
 <span class="p">{</span><span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span> <span class="s">'indent'</span><span class="p">:</span> <span class="s">''</span><span class="p">,</span> <span class="s">'type'</span><span class="p">:</span> <span class="s">'endl'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">},</span>
 <span class="p">{</span><span class="s">'type'</span><span class="p">:</span> <span class="s">'ifelseblock'</span><span class="p">,</span>
  <span class="s">'value'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'first_formatting'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'type'</span><span class="p">:</span> <span class="s">'space'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u' '</span><span class="p">}],</span>
    <span class="s">'second_formatting'</span><span class="p">:</span> <span class="p">[],</span>
    <span class="s">'test'</span><span class="p">:</span> <span class="p">{</span><span class="s">'first'</span><span class="p">:</span> <span class="p">{</span><span class="s">'type'</span><span class="p">:</span> <span class="s">'name'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'__name__'</span><span class="p">},</span>
     <span class="s">'first_formatting'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'type'</span><span class="p">:</span> <span class="s">'space'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u' '</span><span class="p">}],</span>
     <span class="s">'second'</span><span class="p">:</span> <span class="p">{</span><span class="s">'first_formatting'</span><span class="p">:</span> <span class="p">[],</span>
      <span class="s">'second_formatting'</span><span class="p">:</span> <span class="p">[],</span>
      <span class="s">'type'</span><span class="p">:</span> <span class="s">'string'</span><span class="p">,</span>
      <span class="s">'value'</span><span class="p">:</span> <span class="s">u'"__main__"'</span><span class="p">},</span>
     <span class="s">'second_formatting'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'type'</span><span class="p">:</span> <span class="s">'space'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u' '</span><span class="p">}],</span>
     <span class="s">'type'</span><span class="p">:</span> <span class="s">'comparison'</span><span class="p">,</span>
     <span class="s">'value'</span><span class="p">:</span> <span class="p">{</span><span class="s">'first'</span><span class="p">:</span> <span class="s">u'=='</span><span class="p">,</span>
      <span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span>
      <span class="s">'second'</span><span class="p">:</span> <span class="s">''</span><span class="p">,</span>
      <span class="s">'type'</span><span class="p">:</span> <span class="s">'comparison_operator'</span><span class="p">}},</span>
    <span class="s">'third_formatting'</span><span class="p">:</span> <span class="p">[],</span>
    <span class="s">'type'</span><span class="p">:</span> <span class="s">'if'</span><span class="p">,</span>
    <span class="s">'value'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span>
      <span class="s">'indent'</span><span class="p">:</span> <span class="s">u'    '</span><span class="p">,</span>
      <span class="s">'type'</span><span class="p">:</span> <span class="s">'endl'</span><span class="p">,</span>
      <span class="s">'value'</span><span class="p">:</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">},</span>
     <span class="p">{</span><span class="s">'type'</span><span class="p">:</span> <span class="s">'atomtrailers'</span><span class="p">,</span>
      <span class="s">'value'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'type'</span><span class="p">:</span> <span class="s">'name'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'main'</span><span class="p">},</span>
       <span class="p">{</span><span class="s">'first_formatting'</span><span class="p">:</span> <span class="p">[],</span>
        <span class="s">'fourth_formatting'</span><span class="p">:</span> <span class="p">[],</span>
        <span class="s">'second_formatting'</span><span class="p">:</span> <span class="p">[],</span>
        <span class="s">'third_formatting'</span><span class="p">:</span> <span class="p">[],</span>
        <span class="s">'type'</span><span class="p">:</span> <span class="s">'call'</span><span class="p">,</span>
        <span class="s">'value'</span><span class="p">:</span> <span class="p">[]}]},</span>
     <span class="p">{</span><span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span> <span class="s">'indent'</span><span class="p">:</span> <span class="s">''</span><span class="p">,</span> <span class="s">'type'</span><span class="p">:</span> <span class="s">'endl'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">}]}]}]</span>

</code></pre></div></div>

<ul>
  <li>Baron’s FST for the second case</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[{</span><span class="s">'arguments'</span><span class="p">:</span> <span class="p">[],</span>
  <span class="s">'decorators'</span><span class="p">:</span> <span class="p">[],</span>
  <span class="s">'fifth_formatting'</span><span class="p">:</span> <span class="p">[],</span>
  <span class="s">'first_formatting'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'type'</span><span class="p">:</span> <span class="s">'space'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u' '</span><span class="p">}],</span>
  <span class="s">'fourth_formatting'</span><span class="p">:</span> <span class="p">[],</span>
  <span class="s">'name'</span><span class="p">:</span> <span class="s">u'main'</span><span class="p">,</span>
  <span class="s">'second_formatting'</span><span class="p">:</span> <span class="p">[],</span>
  <span class="s">'sixth_formatting'</span><span class="p">:</span> <span class="p">[],</span>
  <span class="s">'third_formatting'</span><span class="p">:</span> <span class="p">[],</span>
  <span class="s">'type'</span><span class="p">:</span> <span class="s">'def'</span><span class="p">,</span>
  <span class="s">'value'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span>
    <span class="s">'indent'</span><span class="p">:</span> <span class="s">u'    '</span><span class="p">,</span>
    <span class="s">'type'</span><span class="p">:</span> <span class="s">'endl'</span><span class="p">,</span>
    <span class="s">'value'</span><span class="p">:</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">},</span>
   <span class="p">{</span><span class="s">'destination'</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
    <span class="s">'destination_formatting'</span><span class="p">:</span> <span class="p">[],</span>
    <span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span>
    <span class="s">'type'</span><span class="p">:</span> <span class="s">'print'</span><span class="p">,</span>
    <span class="s">'value'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'first_formatting'</span><span class="p">:</span> <span class="p">[],</span>
      <span class="s">'fourth_formatting'</span><span class="p">:</span> <span class="p">[],</span>
      <span class="s">'second_formatting'</span><span class="p">:</span> <span class="p">[],</span>
      <span class="s">'third_formatting'</span><span class="p">:</span> <span class="p">[],</span>
      <span class="s">'type'</span><span class="p">:</span> <span class="s">'associative_parenthesis'</span><span class="p">,</span>
      <span class="s">'value'</span><span class="p">:</span> <span class="p">{</span><span class="s">'first_formatting'</span><span class="p">:</span> <span class="p">[],</span>
       <span class="s">'second_formatting'</span><span class="p">:</span> <span class="p">[],</span>
       <span class="s">'type'</span><span class="p">:</span> <span class="s">'string'</span><span class="p">,</span>
       <span class="s">'value'</span><span class="p">:</span> <span class="s">u'"main"'</span><span class="p">}}]},</span>
   <span class="p">{</span><span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span> <span class="s">'indent'</span><span class="p">:</span> <span class="s">''</span><span class="p">,</span> <span class="s">'type'</span><span class="p">:</span> <span class="s">'endl'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">},</span>
   <span class="p">{</span><span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span> <span class="s">'indent'</span><span class="p">:</span> <span class="s">''</span><span class="p">,</span> <span class="s">'type'</span><span class="p">:</span> <span class="s">'endl'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">}]},</span>
 <span class="p">{</span><span class="s">'first_formatting'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'type'</span><span class="p">:</span> <span class="s">'space'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u' '</span><span class="p">}],</span>
  <span class="s">'operator'</span><span class="p">:</span> <span class="s">''</span><span class="p">,</span>
  <span class="s">'second_formatting'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'type'</span><span class="p">:</span> <span class="s">'space'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u' '</span><span class="p">}],</span>
  <span class="s">'target'</span><span class="p">:</span> <span class="p">{</span><span class="s">'type'</span><span class="p">:</span> <span class="s">'name'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'a'</span><span class="p">},</span>
  <span class="s">'type'</span><span class="p">:</span> <span class="s">'assignment'</span><span class="p">,</span>
  <span class="s">'value'</span><span class="p">:</span> <span class="p">{</span><span class="s">'section'</span><span class="p">:</span> <span class="s">'number'</span><span class="p">,</span> <span class="s">'type'</span><span class="p">:</span> <span class="s">'int'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'1'</span><span class="p">}},</span>
 <span class="p">{</span><span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span> <span class="s">'indent'</span><span class="p">:</span> <span class="s">''</span><span class="p">,</span> <span class="s">'type'</span><span class="p">:</span> <span class="s">'endl'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">},</span>
 <span class="p">{</span><span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span> <span class="s">'type'</span><span class="p">:</span> <span class="s">'comment'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'# cmt'</span><span class="p">},</span>
 <span class="p">{</span><span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span> <span class="s">'indent'</span><span class="p">:</span> <span class="s">''</span><span class="p">,</span> <span class="s">'type'</span><span class="p">:</span> <span class="s">'endl'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">},</span>
 <span class="p">{</span><span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span> <span class="s">'indent'</span><span class="p">:</span> <span class="s">''</span><span class="p">,</span> <span class="s">'type'</span><span class="p">:</span> <span class="s">'endl'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">},</span>
 <span class="p">{</span><span class="s">'type'</span><span class="p">:</span> <span class="s">'ifelseblock'</span><span class="p">,</span>
  <span class="s">'value'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'first_formatting'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'type'</span><span class="p">:</span> <span class="s">'space'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u' '</span><span class="p">}],</span>
    <span class="s">'second_formatting'</span><span class="p">:</span> <span class="p">[],</span>
    <span class="s">'test'</span><span class="p">:</span> <span class="p">{</span><span class="s">'first'</span><span class="p">:</span> <span class="p">{</span><span class="s">'type'</span><span class="p">:</span> <span class="s">'name'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'__name__'</span><span class="p">},</span>
     <span class="s">'first_formatting'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'type'</span><span class="p">:</span> <span class="s">'space'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u' '</span><span class="p">}],</span>
     <span class="s">'second'</span><span class="p">:</span> <span class="p">{</span><span class="s">'first_formatting'</span><span class="p">:</span> <span class="p">[],</span>
      <span class="s">'second_formatting'</span><span class="p">:</span> <span class="p">[],</span>
      <span class="s">'type'</span><span class="p">:</span> <span class="s">'string'</span><span class="p">,</span>
      <span class="s">'value'</span><span class="p">:</span> <span class="s">u'"__main__"'</span><span class="p">},</span>
     <span class="s">'second_formatting'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'type'</span><span class="p">:</span> <span class="s">'space'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u' '</span><span class="p">}],</span>
     <span class="s">'type'</span><span class="p">:</span> <span class="s">'comparison'</span><span class="p">,</span>
     <span class="s">'value'</span><span class="p">:</span> <span class="p">{</span><span class="s">'first'</span><span class="p">:</span> <span class="s">u'=='</span><span class="p">,</span>
      <span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span>
      <span class="s">'second'</span><span class="p">:</span> <span class="s">''</span><span class="p">,</span>
      <span class="s">'type'</span><span class="p">:</span> <span class="s">'comparison_operator'</span><span class="p">}},</span>
    <span class="s">'third_formatting'</span><span class="p">:</span> <span class="p">[],</span>
    <span class="s">'type'</span><span class="p">:</span> <span class="s">'if'</span><span class="p">,</span>
    <span class="s">'value'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span>
      <span class="s">'indent'</span><span class="p">:</span> <span class="s">u'    '</span><span class="p">,</span>
      <span class="s">'type'</span><span class="p">:</span> <span class="s">'endl'</span><span class="p">,</span>
      <span class="s">'value'</span><span class="p">:</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">},</span>
     <span class="p">{</span><span class="s">'type'</span><span class="p">:</span> <span class="s">'atomtrailers'</span><span class="p">,</span>
      <span class="s">'value'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'type'</span><span class="p">:</span> <span class="s">'name'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'main'</span><span class="p">},</span>
       <span class="p">{</span><span class="s">'first_formatting'</span><span class="p">:</span> <span class="p">[],</span>
        <span class="s">'fourth_formatting'</span><span class="p">:</span> <span class="p">[],</span>
        <span class="s">'second_formatting'</span><span class="p">:</span> <span class="p">[],</span>
        <span class="s">'third_formatting'</span><span class="p">:</span> <span class="p">[],</span>
        <span class="s">'type'</span><span class="p">:</span> <span class="s">'call'</span><span class="p">,</span>
        <span class="s">'value'</span><span class="p">:</span> <span class="p">[]}]},</span>
     <span class="p">{</span><span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span> <span class="s">'indent'</span><span class="p">:</span> <span class="s">''</span><span class="p">,</span> <span class="s">'type'</span><span class="p">:</span> <span class="s">'endl'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">}]}]}]</span>
</code></pre></div></div>

<ul>
  <li>Baron’s FST for the second case(where I have commented assignment node):</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">[{</span><span class="s">'arguments'</span><span class="p">:</span> <span class="p">[],</span>
  <span class="s">'decorators'</span><span class="p">:</span> <span class="p">[],</span>
  <span class="s">'fifth_formatting'</span><span class="p">:</span> <span class="p">[],</span>
  <span class="s">'first_formatting'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'type'</span><span class="p">:</span> <span class="s">'space'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u' '</span><span class="p">}],</span>
  <span class="s">'fourth_formatting'</span><span class="p">:</span> <span class="p">[],</span>
  <span class="s">'name'</span><span class="p">:</span> <span class="s">u'main'</span><span class="p">,</span>
  <span class="s">'second_formatting'</span><span class="p">:</span> <span class="p">[],</span>
  <span class="s">'sixth_formatting'</span><span class="p">:</span> <span class="p">[],</span>
  <span class="s">'third_formatting'</span><span class="p">:</span> <span class="p">[],</span>
  <span class="s">'type'</span><span class="p">:</span> <span class="s">'def'</span><span class="p">,</span>
  <span class="s">'value'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span>
    <span class="s">'indent'</span><span class="p">:</span> <span class="s">u'    '</span><span class="p">,</span>
    <span class="s">'type'</span><span class="p">:</span> <span class="s">'endl'</span><span class="p">,</span>
    <span class="s">'value'</span><span class="p">:</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">},</span>
   <span class="p">{</span><span class="s">'destination'</span><span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
    <span class="s">'destination_formatting'</span><span class="p">:</span> <span class="p">[],</span>
    <span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span>
    <span class="s">'type'</span><span class="p">:</span> <span class="s">'print'</span><span class="p">,</span>
    <span class="s">'value'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'first_formatting'</span><span class="p">:</span> <span class="p">[],</span>
      <span class="s">'fourth_formatting'</span><span class="p">:</span> <span class="p">[],</span>
      <span class="s">'second_formatting'</span><span class="p">:</span> <span class="p">[],</span>
      <span class="s">'third_formatting'</span><span class="p">:</span> <span class="p">[],</span>
      <span class="s">'type'</span><span class="p">:</span> <span class="s">'associative_parenthesis'</span><span class="p">,</span>
      <span class="s">'value'</span><span class="p">:</span> <span class="p">{</span><span class="s">'first_formatting'</span><span class="p">:</span> <span class="p">[],</span>
       <span class="s">'second_formatting'</span><span class="p">:</span> <span class="p">[],</span>
       <span class="s">'type'</span><span class="p">:</span> <span class="s">'string'</span><span class="p">,</span>
       <span class="s">'value'</span><span class="p">:</span> <span class="s">u'"main"'</span><span class="p">}}]},</span>
   <span class="p">{</span><span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span> <span class="s">'indent'</span><span class="p">:</span> <span class="s">''</span><span class="p">,</span> <span class="s">'type'</span><span class="p">:</span> <span class="s">'endl'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">},</span>
   <span class="p">{</span><span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span> <span class="s">'indent'</span><span class="p">:</span> <span class="s">''</span><span class="p">,</span> <span class="s">'type'</span><span class="p">:</span> <span class="s">'endl'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">}]},</span>
 <span class="p">{</span><span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span> <span class="s">'type'</span><span class="p">:</span> <span class="s">'comment'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'#a = 1'</span><span class="p">},</span>
 <span class="p">{</span><span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span> <span class="s">'indent'</span><span class="p">:</span> <span class="s">''</span><span class="p">,</span> <span class="s">'type'</span><span class="p">:</span> <span class="s">'endl'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">},</span>
 <span class="p">{</span><span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span> <span class="s">'type'</span><span class="p">:</span> <span class="s">'comment'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'# cmt'</span><span class="p">},</span>
 <span class="p">{</span><span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span> <span class="s">'indent'</span><span class="p">:</span> <span class="s">''</span><span class="p">,</span> <span class="s">'type'</span><span class="p">:</span> <span class="s">'endl'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">},</span>
 <span class="p">{</span><span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span> <span class="s">'indent'</span><span class="p">:</span> <span class="s">''</span><span class="p">,</span> <span class="s">'type'</span><span class="p">:</span> <span class="s">'endl'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">},</span>
 <span class="p">{</span><span class="s">'type'</span><span class="p">:</span> <span class="s">'ifelseblock'</span><span class="p">,</span>
  <span class="s">'value'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'first_formatting'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'type'</span><span class="p">:</span> <span class="s">'space'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u' '</span><span class="p">}],</span>
    <span class="s">'second_formatting'</span><span class="p">:</span> <span class="p">[],</span>
    <span class="s">'test'</span><span class="p">:</span> <span class="p">{</span><span class="s">'first'</span><span class="p">:</span> <span class="p">{</span><span class="s">'type'</span><span class="p">:</span> <span class="s">'name'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'__name__'</span><span class="p">},</span>
     <span class="s">'first_formatting'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'type'</span><span class="p">:</span> <span class="s">'space'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u' '</span><span class="p">}],</span>
     <span class="s">'second'</span><span class="p">:</span> <span class="p">{</span><span class="s">'first_formatting'</span><span class="p">:</span> <span class="p">[],</span>
      <span class="s">'second_formatting'</span><span class="p">:</span> <span class="p">[],</span>
      <span class="s">'type'</span><span class="p">:</span> <span class="s">'string'</span><span class="p">,</span>
      <span class="s">'value'</span><span class="p">:</span> <span class="s">u'"__main__"'</span><span class="p">},</span>
     <span class="s">'second_formatting'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'type'</span><span class="p">:</span> <span class="s">'space'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u' '</span><span class="p">}],</span>
     <span class="s">'type'</span><span class="p">:</span> <span class="s">'comparison'</span><span class="p">,</span>
     <span class="s">'value'</span><span class="p">:</span> <span class="p">{</span><span class="s">'first'</span><span class="p">:</span> <span class="s">u'=='</span><span class="p">,</span>
      <span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span>
      <span class="s">'second'</span><span class="p">:</span> <span class="s">''</span><span class="p">,</span>
      <span class="s">'type'</span><span class="p">:</span> <span class="s">'comparison_operator'</span><span class="p">}},</span>
    <span class="s">'third_formatting'</span><span class="p">:</span> <span class="p">[],</span>
    <span class="s">'type'</span><span class="p">:</span> <span class="s">'if'</span><span class="p">,</span>
    <span class="s">'value'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span>
      <span class="s">'indent'</span><span class="p">:</span> <span class="s">u'    '</span><span class="p">,</span>
      <span class="s">'type'</span><span class="p">:</span> <span class="s">'endl'</span><span class="p">,</span>
      <span class="s">'value'</span><span class="p">:</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">},</span>
     <span class="p">{</span><span class="s">'type'</span><span class="p">:</span> <span class="s">'atomtrailers'</span><span class="p">,</span>
      <span class="s">'value'</span><span class="p">:</span> <span class="p">[{</span><span class="s">'type'</span><span class="p">:</span> <span class="s">'name'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'main'</span><span class="p">},</span>
       <span class="p">{</span><span class="s">'first_formatting'</span><span class="p">:</span> <span class="p">[],</span>
        <span class="s">'fourth_formatting'</span><span class="p">:</span> <span class="p">[],</span>
        <span class="s">'second_formatting'</span><span class="p">:</span> <span class="p">[],</span>
        <span class="s">'third_formatting'</span><span class="p">:</span> <span class="p">[],</span>
        <span class="s">'type'</span><span class="p">:</span> <span class="s">'call'</span><span class="p">,</span>
        <span class="s">'value'</span><span class="p">:</span> <span class="p">[]}]},</span>
     <span class="p">{</span><span class="s">'formatting'</span><span class="p">:</span> <span class="p">[],</span> <span class="s">'indent'</span><span class="p">:</span> <span class="s">''</span><span class="p">,</span> <span class="s">'type'</span><span class="p">:</span> <span class="s">'endl'</span><span class="p">,</span> <span class="s">'value'</span><span class="p">:</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">}]}]}]</span>
</code></pre></div></div>

<p>I’ve been surprised a little bit because all seems to be good. But a problem was deeper.</p>

<p>During debugging I’ve recognized that the RedBaron has already received a broken sequence of tokens.
Consequently, the problem is occurring between two layers and not affected a dump function in all cases.</p>

<p>Let’s trace back functions calls for one source where(I’m thinking) a problem occurs:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">__init__</span><span class="p">,:</span><span class="n">redbaron</span><span class="o">.</span><span class="n">py</span><span class="p">:</span><span class="mi">37</span> <span class="o">-&gt;</span> 
<span class="n">parse</span><span class="p">,</span><span class="n">baron</span><span class="o">.</span><span class="n">py</span><span class="p">:</span><span class="mi">49</span> <span class="o">-&gt;</span> 
<span class="n">tokenize</span><span class="p">,</span> <span class="n">baron</span><span class="o">.</span><span class="n">py</span><span class="p">:</span><span class="mi">70</span> <span class="o">-&gt;</span> 
<span class="n">group</span><span class="p">,</span> <span class="n">formatting_grouper</span><span class="o">.</span><span class="n">py</span><span class="p">:</span><span class="mi">108</span> <span class="o">-&gt;</span> 
<span class="n">group_generator</span><span class="p">,</span> <span class="n">formatting_grouper</span><span class="o">.</span><span class="n">py</span><span class="p">:</span><span class="mi">118</span>
</code></pre></div></div>
<blockquote>
  <p>A code inside of <code class="highlighter-rouge">tokenize</code> function has to be refactored to set up a breakpoint</p>
</blockquote>

<p>Before a <code class="highlighter-rouge">space_group</code> function call:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mi">00</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">u'DEF'</span><span class="p">,</span> <span class="s">u'def'</span><span class="p">)</span>
<span class="mi">01</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)</span>
<span class="mi">02</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'main'</span><span class="p">)</span>
<span class="mi">03</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'LEFT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u'('</span><span class="p">)</span>
<span class="mi">04</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'RIGHT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u')'</span><span class="p">)</span>
<span class="mi">05</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'COLON'</span><span class="p">,</span> <span class="s">u':'</span><span class="p">)</span>
<span class="mi">06</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">07</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u'    '</span><span class="p">)</span>
<span class="mi">08</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">u'PRINT'</span><span class="p">,</span> <span class="s">u'print'</span><span class="p">)</span>
<span class="mi">09</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'LEFT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u'('</span><span class="p">)</span>
<span class="mi">10</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'STRING'</span><span class="p">,</span> <span class="s">u'"main"'</span><span class="p">)</span>
<span class="mi">11</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'RIGHT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u')'</span><span class="p">)</span>
<span class="mi">12</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">13</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">14</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'COMMENT'</span><span class="p">,</span> <span class="s">u'# cmt'</span><span class="p">)</span>
<span class="mi">15</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">16</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">17</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">u'IF'</span><span class="p">,</span> <span class="s">u'if'</span><span class="p">)</span>
<span class="mi">18</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)</span>
<span class="mi">19</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'__name__'</span><span class="p">)</span>
<span class="mi">20</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)</span>
<span class="mi">21</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'EQUAL_EQUAL'</span><span class="p">,</span> <span class="s">u'=='</span><span class="p">)</span>
<span class="mi">22</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)</span>
<span class="mi">23</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'STRING'</span><span class="p">,</span> <span class="s">u'"__main__"'</span><span class="p">)</span>
<span class="mi">24</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'COLON'</span><span class="p">,</span> <span class="s">u':'</span><span class="p">)</span>
<span class="mi">25</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">26</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u'    '</span><span class="p">)</span>
<span class="mi">27</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'main'</span><span class="p">)</span>
<span class="mi">28</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'LEFT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u'('</span><span class="p">)</span>
<span class="mi">29</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'RIGHT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u')'</span><span class="p">)</span>
<span class="mi">30</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">31</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDMARKER'</span><span class="p">,</span> <span class="s">''</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li>After a <code class="highlighter-rouge">space_group</code> function call</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mi">00</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">u'DEF'</span><span class="p">,</span> <span class="s">u'def'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)])</span>
<span class="mi">01</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'main'</span><span class="p">)</span>
<span class="mi">02</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'LEFT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u'('</span><span class="p">)</span>
<span class="mi">03</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'RIGHT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u')'</span><span class="p">)</span>
<span class="mi">04</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'COLON'</span><span class="p">,</span> <span class="s">u':'</span><span class="p">)</span>
<span class="mi">05</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u'    '</span><span class="p">)])</span>
<span class="mi">06</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">u'PRINT'</span><span class="p">,</span> <span class="s">u'print'</span><span class="p">)</span>
<span class="mi">07</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'LEFT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u'('</span><span class="p">)</span>
<span class="mi">08</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'STRING'</span><span class="p">,</span> <span class="s">u'"main"'</span><span class="p">)</span>
<span class="mi">09</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'RIGHT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u')'</span><span class="p">)</span>
<span class="mi">10</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">11</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'COMMENT'</span><span class="p">,</span> <span class="s">u'# cmt'</span><span class="p">)])</span>
<span class="mi">12</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">13</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">14</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">u'IF'</span><span class="p">,</span> <span class="s">u'if'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)])</span>
<span class="mi">15</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'__name__'</span><span class="p">)</span>
<span class="mi">16</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'EQUAL_EQUAL'</span><span class="p">,</span> <span class="s">u'=='</span><span class="p">,</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)])</span>
<span class="mi">17</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'STRING'</span><span class="p">,</span> <span class="s">u'"__main__"'</span><span class="p">)</span>
<span class="mi">18</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'COLON'</span><span class="p">,</span> <span class="s">u':'</span><span class="p">)</span>
<span class="mi">19</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u'    '</span><span class="p">)])</span>
<span class="mi">20</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'main'</span><span class="p">)</span>
<span class="mi">21</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'LEFT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u'('</span><span class="p">)</span>
<span class="mi">22</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'RIGHT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u')'</span><span class="p">)</span>
<span class="mi">23</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">24</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDMARKER'</span><span class="p">,</span> <span class="s">''</span><span class="p">)</span>
</code></pre></div></div>

<p>And I’ve repeated it again for the second case:</p>

<ul>
  <li>Before <code class="highlighter-rouge">space_group</code> function call:</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mi">00</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">u'DEF'</span><span class="p">,</span> <span class="s">u'def'</span><span class="p">)</span>
<span class="mi">01</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)</span>
<span class="mi">02</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'main'</span><span class="p">)</span>
<span class="mi">03</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'LEFT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u'('</span><span class="p">)</span>
<span class="mi">04</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'RIGHT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u')'</span><span class="p">)</span>
<span class="mi">05</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'COLON'</span><span class="p">,</span> <span class="s">u':'</span><span class="p">)</span>
<span class="mi">06</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">07</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u'    '</span><span class="p">)</span>
<span class="mi">08</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">u'PRINT'</span><span class="p">,</span> <span class="s">u'print'</span><span class="p">)</span>
<span class="mi">09</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'LEFT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u'('</span><span class="p">)</span>
<span class="mi">10</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'STRING'</span><span class="p">,</span> <span class="s">u'"main"'</span><span class="p">)</span>
<span class="mi">11</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'RIGHT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u')'</span><span class="p">)</span>
<span class="mi">12</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">13</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">14</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'a'</span><span class="p">)</span>
<span class="mi">15</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)</span>
<span class="mi">16</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'EQUAL'</span><span class="p">,</span> <span class="s">u'='</span><span class="p">)</span>
<span class="mi">17</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)</span>
<span class="mi">18</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'INT'</span><span class="p">,</span> <span class="s">u'1'</span><span class="p">)</span>
<span class="mi">19</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">20</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'COMMENT'</span><span class="p">,</span> <span class="s">u'# cmt'</span><span class="p">)</span>
<span class="mi">21</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">22</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">23</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">u'IF'</span><span class="p">,</span> <span class="s">u'if'</span><span class="p">)</span>
<span class="mi">24</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)</span>
<span class="mi">25</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'__name__'</span><span class="p">)</span>
<span class="mi">26</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)</span>
<span class="mi">27</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'EQUAL_EQUAL'</span><span class="p">,</span> <span class="s">u'=='</span><span class="p">)</span>
<span class="mi">28</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)</span>
<span class="mi">29</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'STRING'</span><span class="p">,</span> <span class="s">u'"__main__"'</span><span class="p">)</span>
<span class="mi">30</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'COLON'</span><span class="p">,</span> <span class="s">u':'</span><span class="p">)</span>
<span class="mi">31</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">32</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u'    '</span><span class="p">)</span>
<span class="mi">33</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'main'</span><span class="p">)</span>
<span class="mi">34</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'LEFT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u'('</span><span class="p">)</span>
<span class="mi">35</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'RIGHT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u')'</span><span class="p">)</span>
<span class="mi">36</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">37</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDMARKER'</span><span class="p">,</span> <span class="s">''</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li>After <code class="highlighter-rouge">space_group</code> function call:</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mi">00</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">u'DEF'</span><span class="p">,</span> <span class="s">u'def'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)])</span>
<span class="mi">03</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'RIGHT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u')'</span><span class="p">)</span>
<span class="mi">07</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'LEFT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u'('</span><span class="p">)</span>
<span class="mi">06</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">u'PRINT'</span><span class="p">,</span> <span class="s">u'print'</span><span class="p">)</span>
<span class="mi">23</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u'    '</span><span class="p">)])</span>
<span class="mi">17</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">05</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u'    '</span><span class="p">)])</span>
<span class="mi">10</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">24</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'main'</span><span class="p">)</span>
<span class="mi">02</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'LEFT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u'('</span><span class="p">)</span>
<span class="mi">12</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'a'</span><span class="p">)</span>
<span class="mi">19</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'__name__'</span><span class="p">)</span>
<span class="mi">14</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'INT'</span><span class="p">,</span> <span class="s">u'1'</span><span class="p">)</span>
<span class="mi">27</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">18</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">u'IF'</span><span class="p">,</span> <span class="s">u'if'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)])</span>
<span class="mi">11</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">08</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'STRING'</span><span class="p">,</span> <span class="s">u'"main"'</span><span class="p">)</span>
<span class="mi">04</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'COLON'</span><span class="p">,</span> <span class="s">u':'</span><span class="p">)</span>
<span class="mi">22</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'COLON'</span><span class="p">,</span> <span class="s">u':'</span><span class="p">)</span>
<span class="mi">13</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'EQUAL'</span><span class="p">,</span> <span class="s">u'='</span><span class="p">,</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)])</span>
<span class="mi">15</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'COMMENT'</span><span class="p">,</span> <span class="s">u'# cmt'</span><span class="p">)])</span>
<span class="mi">16</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">01</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'main'</span><span class="p">)</span>
<span class="mi">25</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'LEFT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u'('</span><span class="p">)</span>
<span class="mi">28</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDMARKER'</span><span class="p">,</span> <span class="s">''</span><span class="p">)</span>
<span class="mi">09</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'RIGHT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u')'</span><span class="p">)</span>
<span class="mi">20</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'EQUAL_EQUAL'</span><span class="p">,</span> <span class="s">u'=='</span><span class="p">,</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)])</span>
<span class="mi">26</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'RIGHT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u')'</span><span class="p">)</span>
<span class="mi">21</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'STRING'</span><span class="p">,</span> <span class="s">u'"__main__"'</span><span class="p">)</span>
</code></pre></div></div>

<p>In both excerpts, a <code class="highlighter-rouge">COMMENT</code> was being attached to an <code class="highlighter-rouge">ENDL</code>.(surprise!)</p>

<p>In next steps, I’ve got the next results from two calls: <code class="highlighter-rouge">python inner_group()</code> and <code class="highlighter-rouge">python mark_indentaion()</code> for the second case</p>

<ul>
  <li>inner_group()</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mi">00</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">u'DEF'</span><span class="p">,</span> <span class="s">u'def'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)])</span>
<span class="mi">01</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'main'</span><span class="p">)</span>
<span class="mi">02</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'LEFT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u'('</span><span class="p">)</span>
<span class="mi">03</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'RIGHT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u')'</span><span class="p">)</span>
<span class="mi">04</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'COLON'</span><span class="p">,</span> <span class="s">u':'</span><span class="p">)</span>
<span class="mi">05</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u'    '</span><span class="p">)])</span>
<span class="mi">06</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">u'PRINT'</span><span class="p">,</span> <span class="s">u'print'</span><span class="p">)</span>
<span class="mi">07</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'LEFT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u'('</span><span class="p">)</span>
<span class="mi">08</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'STRING'</span><span class="p">,</span> <span class="s">u'"main"'</span><span class="p">)</span>
<span class="mi">09</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'RIGHT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u')'</span><span class="p">)</span>
<span class="mi">10</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">11</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">12</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'a'</span><span class="p">)</span>
<span class="mi">13</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'EQUAL'</span><span class="p">,</span> <span class="s">u'='</span><span class="p">,</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)])</span>
<span class="mi">14</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'INT'</span><span class="p">,</span> <span class="s">u'1'</span><span class="p">)</span>
<span class="mi">15</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'COMMENT'</span><span class="p">,</span> <span class="s">u'# cmt'</span><span class="p">)])</span>
<span class="mi">16</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">17</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">18</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">u'IF'</span><span class="p">,</span> <span class="s">u'if'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)])</span>
<span class="mi">19</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'__name__'</span><span class="p">)</span>
<span class="mi">20</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'EQUAL_EQUAL'</span><span class="p">,</span> <span class="s">u'=='</span><span class="p">,</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)])</span>
<span class="mi">21</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'STRING'</span><span class="p">,</span> <span class="s">u'"__main__"'</span><span class="p">)</span>
<span class="mi">22</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'COLON'</span><span class="p">,</span> <span class="s">u':'</span><span class="p">)</span>
<span class="mi">23</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u'    '</span><span class="p">)])</span>
<span class="mi">24</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'main'</span><span class="p">)</span>
<span class="mi">25</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'LEFT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u'('</span><span class="p">)</span>
<span class="mi">26</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'RIGHT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u')'</span><span class="p">)</span>
<span class="mi">27</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">28</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDMARKER'</span><span class="p">,</span> <span class="s">''</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li>mark_indentation()</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mi">00</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">u'DEF'</span><span class="p">,</span> <span class="s">u'def'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)])</span>
<span class="mi">01</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'main'</span><span class="p">)</span>
<span class="mi">02</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'LEFT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u'('</span><span class="p">)</span>
<span class="mi">03</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'RIGHT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u')'</span><span class="p">)</span>
<span class="mi">04</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'COLON'</span><span class="p">,</span> <span class="s">u':'</span><span class="p">)</span>
<span class="mi">05</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u'    '</span><span class="p">)])</span>
<span class="mi">06</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'INDENT'</span><span class="p">,</span> <span class="s">''</span><span class="p">)</span>
<span class="mi">07</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">u'PRINT'</span><span class="p">,</span> <span class="s">u'print'</span><span class="p">)</span>
<span class="mi">08</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'LEFT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u'('</span><span class="p">)</span>
<span class="mi">09</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'STRING'</span><span class="p">,</span> <span class="s">u'"main"'</span><span class="p">)</span>
<span class="mi">10</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'RIGHT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u')'</span><span class="p">)</span>
<span class="mi">11</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">12</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">13</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'DEDENT'</span><span class="p">,</span> <span class="s">''</span><span class="p">)</span>
<span class="mi">14</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'a'</span><span class="p">)</span>
<span class="mi">15</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'EQUAL'</span><span class="p">,</span> <span class="s">u'='</span><span class="p">,</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)])</span>
<span class="mi">16</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'INT'</span><span class="p">,</span> <span class="s">u'1'</span><span class="p">)</span>
<span class="mi">17</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'COMMENT'</span><span class="p">,</span> <span class="s">u'# cmt'</span><span class="p">)])</span>
<span class="mi">18</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">19</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">20</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">u'IF'</span><span class="p">,</span> <span class="s">u'if'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)])</span>
<span class="mi">21</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'__name__'</span><span class="p">)</span>
<span class="mi">22</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'EQUAL_EQUAL'</span><span class="p">,</span> <span class="s">u'=='</span><span class="p">,</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)])</span>
<span class="mi">23</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'STRING'</span><span class="p">,</span> <span class="s">u'"__main__"'</span><span class="p">)</span>
<span class="mi">24</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'COLON'</span><span class="p">,</span> <span class="s">u':'</span><span class="p">)</span>
<span class="mi">25</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u'    '</span><span class="p">)])</span>
<span class="mi">26</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'INDENT'</span><span class="p">,</span> <span class="s">''</span><span class="p">)</span>
<span class="mi">27</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'main'</span><span class="p">)</span>
<span class="mi">28</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'LEFT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u'('</span><span class="p">)</span>
<span class="mi">29</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'RIGHT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u')'</span><span class="p">)</span>
<span class="mi">30</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">31</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'DEDENT'</span><span class="p">,</span> <span class="s">''</span><span class="p">)</span>
<span class="mi">32</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDMARKER'</span><span class="p">,</span> <span class="s">''</span><span class="p">)</span>
</code></pre></div></div>

<p>Although <code class="highlighter-rouge">COMMENT</code> was being attached to <code class="highlighter-rouge">ENDL</code>, all seems well. Ok, but for the first case:</p>

<ul>
  <li>inner_group()</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mi">00</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">u'DEF'</span><span class="p">,</span> <span class="s">u'def'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)])</span>
<span class="mi">01</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'main'</span><span class="p">)</span>
<span class="mi">02</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'LEFT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u'('</span><span class="p">)</span>
<span class="mi">03</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'RIGHT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u')'</span><span class="p">)</span>
<span class="mi">04</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'COLON'</span><span class="p">,</span> <span class="s">u':'</span><span class="p">)</span>
<span class="mi">05</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u'    '</span><span class="p">)])</span>
<span class="mi">06</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">u'PRINT'</span><span class="p">,</span> <span class="s">u'print'</span><span class="p">)</span>
<span class="mi">07</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'LEFT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u'('</span><span class="p">)</span>
<span class="mi">08</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'STRING'</span><span class="p">,</span> <span class="s">u'"main"'</span><span class="p">)</span>
<span class="mi">09</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'RIGHT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u')'</span><span class="p">)</span>
<span class="mi">10</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">11</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'COMMENT'</span><span class="p">,</span> <span class="s">u'# cmt'</span><span class="p">)])</span>
<span class="mi">12</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">13</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">14</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">u'IF'</span><span class="p">,</span> <span class="s">u'if'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)])</span>
<span class="mi">15</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'__name__'</span><span class="p">)</span>
<span class="mi">16</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'EQUAL_EQUAL'</span><span class="p">,</span> <span class="s">u'=='</span><span class="p">,</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)])</span>
<span class="mi">17</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'STRING'</span><span class="p">,</span> <span class="s">u'"__main__"'</span><span class="p">)</span>
<span class="mi">18</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'COLON'</span><span class="p">,</span> <span class="s">u':'</span><span class="p">)</span>
<span class="mi">19</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u'    '</span><span class="p">)])</span>
<span class="mi">20</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'main'</span><span class="p">)</span>
<span class="mi">21</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'LEFT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u'('</span><span class="p">)</span>
<span class="mi">22</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'RIGHT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u')'</span><span class="p">)</span>
<span class="mi">23</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">24</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDMARKER'</span><span class="p">,</span> <span class="s">''</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li>mark_indentation()</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mi">00</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">u'DEF'</span><span class="p">,</span> <span class="s">u'def'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)])</span>
<span class="mi">01</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'main'</span><span class="p">)</span>
<span class="mi">02</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'LEFT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u'('</span><span class="p">)</span>
<span class="mi">03</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'RIGHT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u')'</span><span class="p">)</span>
<span class="mi">04</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'COLON'</span><span class="p">,</span> <span class="s">u':'</span><span class="p">)</span>
<span class="mi">05</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u'    '</span><span class="p">)])</span>
<span class="mi">06</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'INDENT'</span><span class="p">,</span> <span class="s">''</span><span class="p">)</span>
<span class="mi">07</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">u'PRINT'</span><span class="p">,</span> <span class="s">u'print'</span><span class="p">)</span>
<span class="mi">08</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'LEFT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u'('</span><span class="p">)</span>
<span class="mi">09</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'STRING'</span><span class="p">,</span> <span class="s">u'"main"'</span><span class="p">)</span>
<span class="mi">10</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'RIGHT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u')'</span><span class="p">)</span>
<span class="mi">11</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">12</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'COMMENT'</span><span class="p">,</span> <span class="s">u'# cmt'</span><span class="p">)])</span>
<span class="mi">13</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">14</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">15</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'DEDENT'</span><span class="p">,</span> <span class="s">''</span><span class="p">)</span>
<span class="mi">16</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">u'IF'</span><span class="p">,</span> <span class="s">u'if'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)])</span>
<span class="mi">17</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'__name__'</span><span class="p">)</span>
<span class="mi">18</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'EQUAL_EQUAL'</span><span class="p">,</span> <span class="s">u'=='</span><span class="p">,</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u' '</span><span class="p">)])</span>
<span class="mi">19</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'STRING'</span><span class="p">,</span> <span class="s">u'"__main__"'</span><span class="p">)</span>
<span class="mi">20</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'COLON'</span><span class="p">,</span> <span class="s">u':'</span><span class="p">)</span>
<span class="mi">21</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">,</span> <span class="p">[],</span> <span class="p">[(</span><span class="s">'SPACE'</span><span class="p">,</span> <span class="s">u'    '</span><span class="p">)])</span>
<span class="mi">22</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'INDENT'</span><span class="p">,</span> <span class="s">''</span><span class="p">)</span>
<span class="mi">23</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'NAME'</span><span class="p">,</span> <span class="s">u'main'</span><span class="p">)</span>
<span class="mi">24</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'LEFT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u'('</span><span class="p">)</span>
<span class="mi">25</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'RIGHT_PARENTHESIS'</span><span class="p">,</span> <span class="s">u')'</span><span class="p">)</span>
<span class="mi">26</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDL'</span><span class="p">,</span> <span class="s">u'</span><span class="se">\n</span><span class="s">'</span><span class="p">)</span>
<span class="mi">27</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'DEDENT'</span><span class="p">,</span> <span class="s">''</span><span class="p">)</span>
<span class="mi">28</span> <span class="o">=</span> <span class="p">{</span><span class="nb">tuple</span><span class="p">}</span> <span class="o">&lt;</span><span class="nb">type</span> <span class="s">'tuple'</span><span class="o">&gt;</span><span class="p">:</span> <span class="p">(</span><span class="s">'ENDMARKER'</span><span class="p">,</span> <span class="s">''</span><span class="p">)</span>
</code></pre></div></div>

<p>I got it!
<code class="highlighter-rouge">DEDENT</code> has not been being set correctly.</p>

<h3 id="how-to-fix-it"><strong>How to fix it?</strong></h3>

<p>There were two ways to fix it. Fix <code class="highlighter-rouge">mark_indentation</code> or <code class="highlighter-rouge">space_group</code>.</p>

<p>I reviewed both cases and picked out <code class="highlighter-rouge">space_group</code> function. 
Because <code class="highlighter-rouge">mark_indentation</code> function just takes sequence after modification of <code class="highlighter-rouge">space_group</code>.
And a <code class="highlighter-rouge">COMMENT</code> node that is being attached inside of <code class="highlighter-rouge">ENDL</code>, seems not a good choice.</p>
<blockquote>
  <p>From my point of view, <code class="highlighter-rouge">CommentNode</code> is the independent element of the tree. It doesn’t relevant to the code if we would like to implement an interpreter.
But for purposes of analysis, we have to save all helpful information from the lexer level( into <code class="highlighter-rouge">hidden</code> layer) to the parser’s level and AST.</p>
</blockquote>

<p>Below my fix is presented(https://github.com/rojaster/baron/commit/7a2cf9e79862cf0f0a10ef3c74a6fcf704251175):</p>

<ul>
  <li><code class="highlighter-rouge">formatting_grouper.py</code>
    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">group_generator</span><span class="p">(</span><span class="n">sequence</span><span class="p">):</span>
<span class="o">....</span>
  <span class="n">markers</span> <span class="o">=</span> <span class="p">(</span><span class="s">"SPACE"</span><span class="p">)</span> <span class="c1"># ("SPACE","COMMENT") it fixes a CommentNode position
</span>  <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
<span class="o">....</span>
      <span class="k">if</span> <span class="n">current</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="ow">in</span> <span class="n">markers</span> <span class="ow">and</span> <span class="n">iterator</span><span class="o">.</span><span class="n">show_next</span><span class="p">()</span> <span class="ow">and</span> <span class="n">iterator</span><span class="o">.</span><span class="n">show_next</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span> <span class="ow">in</span> <span class="n">GROUP_SPACE_BEFORE</span><span class="p">:</span>
<span class="o">....</span>
</code></pre></div>    </div>
  </li>
</ul>

<blockquote>
  <p>Code must be simple as possible, but not so much to be stupid. That is called - experience, skills, art</p>
</blockquote>

<p>And as a result I got next:</p>

<ul>
  <li>Samples:</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">t_buffer</span> <span class="o">=</span> <span class="n">textwrap</span><span class="o">.</span><span class="n">dedent</span><span class="p">(</span><span class="s">u"""</span><span class="se">\
</span><span class="s">    def main():
        print("main")

    # cmt

    if __name__ == "__main__":
        main()
"""</span><span class="p">)</span>

<span class="n">t_buffer0</span> <span class="o">=</span> <span class="n">textwrap</span><span class="o">.</span><span class="n">dedent</span><span class="p">(</span><span class="s">u"""</span><span class="se">\
</span><span class="s">    def main():
        print("main")

    a = 1
    # cmt

    if __name__ == "__main__":
        main()
"""</span><span class="p">)</span>

<span class="n">t_buffer1</span> <span class="o">=</span> <span class="n">textwrap</span><span class="o">.</span><span class="n">dedent</span><span class="p">(</span><span class="s">u"""</span><span class="se">\
</span><span class="s">    #!/usr/bin/env python
    #! -*- coding: utf-8 -*-
    def main():
        # comment before
        print("main") # inline comment

        #comment after

    # a = 1
    # cmt

    if __name__ == "__main__":
        main()
"""</span><span class="p">)</span>

<span class="n">rbt_buffer</span> <span class="o">=</span> <span class="n">RedBaron</span><span class="p">(</span><span class="n">t_buffer</span><span class="p">)</span>
<span class="n">rbt_buffer0</span> <span class="o">=</span> <span class="n">RedBaron</span><span class="p">(</span><span class="n">t_buffer0</span><span class="p">)</span>
<span class="n">rbt_buffer1</span> <span class="o">=</span> <span class="n">RedBaron</span><span class="p">(</span><span class="n">t_buffer1</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">rbt_buffer</span><span class="o">.</span><span class="n">help</span><span class="p">(</span><span class="n">deep</span><span class="o">=</span><span class="bp">True</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">rbt_buffer</span><span class="o">.</span><span class="n">dumps</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"0"</span><span class="o">*</span><span class="mi">100</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">rbt_buffer0</span><span class="o">.</span><span class="n">help</span><span class="p">(</span><span class="n">deep</span><span class="o">=</span><span class="bp">True</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">rbt_buffer0</span><span class="o">.</span><span class="n">dumps</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"1"</span><span class="o">*</span><span class="mi">100</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">rbt_buffer1</span><span class="o">.</span><span class="n">help</span><span class="p">(</span><span class="n">deep</span><span class="o">=</span><span class="bp">True</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">rbt_buffer1</span><span class="o">.</span><span class="n">dumps</span><span class="p">())</span>
<span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li>Samples trees</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mi">0</span> <span class="o">-----------------------------------------------------</span>
<span class="n">DefNode</span><span class="p">()</span>
  <span class="c1"># identifiers: def, def_, defnode, funcdef, funcdef_
</span>  <span class="c1"># default test value: name
</span>  <span class="n">name</span><span class="o">=</span><span class="s">u'main'</span>
  <span class="n">decorators</span> <span class="o">-&gt;</span>
  <span class="n">arguments</span> <span class="o">-&gt;</span>
  <span class="n">value</span> <span class="o">-&gt;</span>
    <span class="o">*</span> <span class="n">PrintNode</span><span class="p">()</span>
        <span class="c1"># identifiers: print, print_, printnode
</span>        <span class="n">destination</span> <span class="o">-&gt;</span>
          <span class="bp">None</span>
        <span class="n">value</span> <span class="o">-&gt;</span>
          <span class="o">*</span> <span class="n">AssociativeParenthesisNode</span><span class="p">()</span>
              <span class="c1"># identifiers: associative_parenthesis, associative_parenthesis_, associativeparenthesis, associativeparenthesisnode
</span>              <span class="n">value</span> <span class="o">-&gt;</span>
                <span class="n">StringNode</span><span class="p">()</span>
                  <span class="c1"># identifiers: string, string_, stringnode
</span>                  <span class="n">value</span><span class="o">=</span><span class="s">u'"main"'</span>
    <span class="o">*</span> <span class="n">EndlNode</span><span class="p">()</span>
        <span class="c1"># identifiers: endl, endl_, endlnode
</span>        <span class="n">value</span><span class="o">=</span><span class="s">u'</span><span class="se">\n</span><span class="s">'</span>
        <span class="n">indent</span><span class="o">=</span><span class="s">''</span>
<span class="mi">1</span> <span class="o">-----------------------------------------------------</span>
<span class="n">CommentNode</span><span class="p">()</span>
  <span class="c1"># identifiers: comment, comment_, commentnode
</span>  <span class="n">value</span><span class="o">=</span><span class="s">u'# cmt'</span>
<span class="mi">2</span> <span class="o">-----------------------------------------------------</span>
<span class="n">EndlNode</span><span class="p">()</span>
  <span class="c1"># identifiers: endl, endl_, endlnode
</span>  <span class="n">value</span><span class="o">=</span><span class="s">u'</span><span class="se">\n</span><span class="s">'</span>
  <span class="n">indent</span><span class="o">=</span><span class="s">''</span>
<span class="mi">3</span> <span class="o">-----------------------------------------------------</span>
<span class="n">EndlNode</span><span class="p">()</span>
  <span class="c1"># identifiers: endl, endl_, endlnode
</span>  <span class="n">value</span><span class="o">=</span><span class="s">u'</span><span class="se">\n</span><span class="s">'</span>
  <span class="n">indent</span><span class="o">=</span><span class="s">''</span>
<span class="mi">4</span> <span class="o">-----------------------------------------------------</span>
<span class="n">IfelseblockNode</span><span class="p">()</span>
  <span class="c1"># identifiers: ifelseblock, ifelseblock_, ifelseblocknode
</span>  <span class="n">value</span> <span class="o">-&gt;</span>
    <span class="o">*</span> <span class="n">IfNode</span><span class="p">()</span>
        <span class="c1"># identifiers: if, if_, ifnode
</span>        <span class="n">test</span> <span class="o">-&gt;</span>
          <span class="n">ComparisonNode</span><span class="p">()</span>
            <span class="c1"># identifiers: comparison, comparison_, comparisonnode
</span>            <span class="n">first</span> <span class="o">-&gt;</span>
              <span class="n">NameNode</span><span class="p">()</span>
                <span class="c1"># identifiers: name, name_, namenode
</span>                <span class="n">value</span><span class="o">=</span><span class="s">u'__name__'</span>
            <span class="n">value</span> <span class="o">-&gt;</span>
              <span class="n">ComparisonOperatorNode</span><span class="p">()</span>
                <span class="c1"># identifiers: comparison_operator, comparison_operator_, comparisonoperator, comparisonoperatornode
</span>                <span class="n">first</span><span class="o">=</span><span class="s">u'=='</span>
                <span class="n">second</span><span class="o">=</span><span class="s">''</span>
            <span class="n">second</span> <span class="o">-&gt;</span>
              <span class="n">StringNode</span><span class="p">()</span>
                <span class="c1"># identifiers: string, string_, stringnode
</span>                <span class="n">value</span><span class="o">=</span><span class="s">u'"__main__"'</span>
        <span class="n">value</span> <span class="o">-&gt;</span>
          <span class="o">*</span> <span class="n">AtomtrailersNode</span><span class="p">()</span>
              <span class="c1"># identifiers: atomtrailers, atomtrailers_, atomtrailersnode
</span>              <span class="n">value</span> <span class="o">-&gt;</span>
                <span class="o">*</span> <span class="n">NameNode</span><span class="p">()</span>
                    <span class="c1"># identifiers: name, name_, namenode
</span>                    <span class="n">value</span><span class="o">=</span><span class="s">u'main'</span>
                <span class="o">*</span> <span class="n">CallNode</span><span class="p">()</span>
                    <span class="c1"># identifiers: call, call_, callnode
</span>                    <span class="n">value</span> <span class="o">-&gt;</span>
<span class="bp">None</span>
<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"main"</span><span class="p">)</span>

<span class="c1"># cmt
</span>
<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>



<span class="mi">0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000</span>
<span class="mi">0</span> <span class="o">-----------------------------------------------------</span>
<span class="n">DefNode</span><span class="p">()</span>
  <span class="c1"># identifiers: def, def_, defnode, funcdef, funcdef_
</span>  <span class="c1"># default test value: name
</span>  <span class="n">name</span><span class="o">=</span><span class="s">u'main'</span>
  <span class="n">decorators</span> <span class="o">-&gt;</span>
  <span class="n">arguments</span> <span class="o">-&gt;</span>
  <span class="n">value</span> <span class="o">-&gt;</span>
    <span class="o">*</span> <span class="n">PrintNode</span><span class="p">()</span>
        <span class="c1"># identifiers: print, print_, printnode
</span>        <span class="n">destination</span> <span class="o">-&gt;</span>
          <span class="bp">None</span>
        <span class="n">value</span> <span class="o">-&gt;</span>
          <span class="o">*</span> <span class="n">AssociativeParenthesisNode</span><span class="p">()</span>
              <span class="c1"># identifiers: associative_parenthesis, associative_parenthesis_, associativeparenthesis, associativeparenthesisnode
</span>              <span class="n">value</span> <span class="o">-&gt;</span>
                <span class="n">StringNode</span><span class="p">()</span>
                  <span class="c1"># identifiers: string, string_, stringnode
</span>                  <span class="n">value</span><span class="o">=</span><span class="s">u'"main"'</span>
    <span class="o">*</span> <span class="n">EndlNode</span><span class="p">()</span>
        <span class="c1"># identifiers: endl, endl_, endlnode
</span>        <span class="n">value</span><span class="o">=</span><span class="s">u'</span><span class="se">\n</span><span class="s">'</span>
        <span class="n">indent</span><span class="o">=</span><span class="s">''</span>
<span class="mi">1</span> <span class="o">-----------------------------------------------------</span>
<span class="n">AssignmentNode</span><span class="p">()</span>
  <span class="c1"># identifiers: assign, assignment, assignment_, assignmentnode
</span>  <span class="n">operator</span><span class="o">=</span><span class="s">''</span>
  <span class="n">target</span> <span class="o">-&gt;</span>
    <span class="n">NameNode</span><span class="p">()</span>
      <span class="c1"># identifiers: name, name_, namenode
</span>      <span class="n">value</span><span class="o">=</span><span class="s">u'a'</span>
  <span class="n">value</span> <span class="o">-&gt;</span>
    <span class="n">IntNode</span><span class="p">()</span>
      <span class="c1"># identifiers: int, int_, intnode
</span>      <span class="n">value</span><span class="o">=</span><span class="s">u'1'</span>
<span class="mi">2</span> <span class="o">-----------------------------------------------------</span>
<span class="n">EndlNode</span><span class="p">()</span>
  <span class="c1"># identifiers: endl, endl_, endlnode
</span>  <span class="n">value</span><span class="o">=</span><span class="s">u'</span><span class="se">\n</span><span class="s">'</span>
  <span class="n">indent</span><span class="o">=</span><span class="s">''</span>
<span class="mi">3</span> <span class="o">-----------------------------------------------------</span>
<span class="n">CommentNode</span><span class="p">()</span>
  <span class="c1"># identifiers: comment, comment_, commentnode
</span>  <span class="n">value</span><span class="o">=</span><span class="s">u'# cmt'</span>
<span class="mi">4</span> <span class="o">-----------------------------------------------------</span>
<span class="n">EndlNode</span><span class="p">()</span>
  <span class="c1"># identifiers: endl, endl_, endlnode
</span>  <span class="n">value</span><span class="o">=</span><span class="s">u'</span><span class="se">\n</span><span class="s">'</span>
  <span class="n">indent</span><span class="o">=</span><span class="s">''</span>
<span class="mi">5</span> <span class="o">-----------------------------------------------------</span>
<span class="n">EndlNode</span><span class="p">()</span>
  <span class="c1"># identifiers: endl, endl_, endlnode
</span>  <span class="n">value</span><span class="o">=</span><span class="s">u'</span><span class="se">\n</span><span class="s">'</span>
  <span class="n">indent</span><span class="o">=</span><span class="s">''</span>
<span class="mi">6</span> <span class="o">-----------------------------------------------------</span>
<span class="n">IfelseblockNode</span><span class="p">()</span>
  <span class="c1"># identifiers: ifelseblock, ifelseblock_, ifelseblocknode
</span>  <span class="n">value</span> <span class="o">-&gt;</span>
    <span class="o">*</span> <span class="n">IfNode</span><span class="p">()</span>
        <span class="c1"># identifiers: if, if_, ifnode
</span>        <span class="n">test</span> <span class="o">-&gt;</span>
          <span class="n">ComparisonNode</span><span class="p">()</span>
            <span class="c1"># identifiers: comparison, comparison_, comparisonnode
</span>            <span class="n">first</span> <span class="o">-&gt;</span>
              <span class="n">NameNode</span><span class="p">()</span>
                <span class="c1"># identifiers: name, name_, namenode
</span>                <span class="n">value</span><span class="o">=</span><span class="s">u'__name__'</span>
            <span class="n">value</span> <span class="o">-&gt;</span>
              <span class="n">ComparisonOperatorNode</span><span class="p">()</span>
                <span class="c1"># identifiers: comparison_operator, comparison_operator_, comparisonoperator, comparisonoperatornode
</span>                <span class="n">first</span><span class="o">=</span><span class="s">u'=='</span>
                <span class="n">second</span><span class="o">=</span><span class="s">''</span>
            <span class="n">second</span> <span class="o">-&gt;</span>
              <span class="n">StringNode</span><span class="p">()</span>
                <span class="c1"># identifiers: string, string_, stringnode
</span>                <span class="n">value</span><span class="o">=</span><span class="s">u'"__main__"'</span>
        <span class="n">value</span> <span class="o">-&gt;</span>
          <span class="o">*</span> <span class="n">AtomtrailersNode</span><span class="p">()</span>
              <span class="c1"># identifiers: atomtrailers, atomtrailers_, atomtrailersnode
</span>              <span class="n">value</span> <span class="o">-&gt;</span>
                <span class="o">*</span> <span class="n">NameNode</span><span class="p">()</span>
                    <span class="c1"># identifiers: name, name_, namenode
</span>                    <span class="n">value</span><span class="o">=</span><span class="s">u'main'</span>
                <span class="o">*</span> <span class="n">CallNode</span><span class="p">()</span>
                    <span class="c1"># identifiers: call, call_, callnode
</span>                    <span class="n">value</span> <span class="o">-&gt;</span>
<span class="bp">None</span>
<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"main"</span><span class="p">)</span>

<span class="n">a</span> <span class="o">=</span> <span class="mi">1</span>
<span class="c1"># cmt
</span>
<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>



<span class="mi">1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111</span>
<span class="mi">0</span> <span class="o">-----------------------------------------------------</span>
<span class="n">CommentNode</span><span class="p">()</span>
  <span class="c1"># identifiers: comment, comment_, commentnode
</span>  <span class="n">value</span><span class="o">=</span><span class="s">u'#!/usr/bin/env python'</span>
<span class="mi">1</span> <span class="o">-----------------------------------------------------</span>
<span class="n">EndlNode</span><span class="p">()</span>
  <span class="c1"># identifiers: endl, endl_, endlnode
</span>  <span class="n">value</span><span class="o">=</span><span class="s">u'</span><span class="se">\n</span><span class="s">'</span>
  <span class="n">indent</span><span class="o">=</span><span class="s">''</span>
<span class="mi">2</span> <span class="o">-----------------------------------------------------</span>
<span class="n">CommentNode</span><span class="p">()</span>
  <span class="c1"># identifiers: comment, comment_, commentnode
</span>  <span class="n">value</span><span class="o">=</span><span class="s">u'#! -*- coding: utf-8 -*-'</span>
<span class="mi">3</span> <span class="o">-----------------------------------------------------</span>
<span class="n">EndlNode</span><span class="p">()</span>
  <span class="c1"># identifiers: endl, endl_, endlnode
</span>  <span class="n">value</span><span class="o">=</span><span class="s">u'</span><span class="se">\n</span><span class="s">'</span>
  <span class="n">indent</span><span class="o">=</span><span class="s">''</span>
<span class="mi">4</span> <span class="o">-----------------------------------------------------</span>
<span class="n">DefNode</span><span class="p">()</span>
  <span class="c1"># identifiers: def, def_, defnode, funcdef, funcdef_
</span>  <span class="c1"># default test value: name
</span>  <span class="n">name</span><span class="o">=</span><span class="s">u'main'</span>
  <span class="n">decorators</span> <span class="o">-&gt;</span>
  <span class="n">arguments</span> <span class="o">-&gt;</span>
  <span class="n">value</span> <span class="o">-&gt;</span>
    <span class="o">*</span> <span class="n">CommentNode</span><span class="p">()</span>
        <span class="c1"># identifiers: comment, comment_, commentnode
</span>        <span class="n">value</span><span class="o">=</span><span class="s">u'# comment before'</span>
    <span class="o">*</span> <span class="n">PrintNode</span><span class="p">()</span>
        <span class="c1"># identifiers: print, print_, printnode
</span>        <span class="n">destination</span> <span class="o">-&gt;</span>
          <span class="bp">None</span>
        <span class="n">value</span> <span class="o">-&gt;</span>
          <span class="o">*</span> <span class="n">AssociativeParenthesisNode</span><span class="p">()</span>
              <span class="c1"># identifiers: associative_parenthesis, associative_parenthesis_, associativeparenthesis, associativeparenthesisnode
</span>              <span class="n">value</span> <span class="o">-&gt;</span>
                <span class="n">StringNode</span><span class="p">()</span>
                  <span class="c1"># identifiers: string, string_, stringnode
</span>                  <span class="n">value</span><span class="o">=</span><span class="s">u'"main"'</span>
    <span class="o">*</span> <span class="n">CommentNode</span><span class="p">()</span>
        <span class="c1"># identifiers: comment, comment_, commentnode
</span>        <span class="n">value</span><span class="o">=</span><span class="s">u'# inline comment'</span>
    <span class="o">*</span> <span class="n">EndlNode</span><span class="p">()</span>
        <span class="c1"># identifiers: endl, endl_, endlnode
</span>        <span class="n">value</span><span class="o">=</span><span class="s">u'</span><span class="se">\n</span><span class="s">'</span>
        <span class="n">indent</span><span class="o">=</span><span class="s">u'    '</span>
    <span class="o">*</span> <span class="n">CommentNode</span><span class="p">()</span>
        <span class="c1"># identifiers: comment, comment_, commentnode
</span>        <span class="n">value</span><span class="o">=</span><span class="s">u'#comment after'</span>
    <span class="o">*</span> <span class="n">EndlNode</span><span class="p">()</span>
        <span class="c1"># identifiers: endl, endl_, endlnode
</span>        <span class="n">value</span><span class="o">=</span><span class="s">u'</span><span class="se">\n</span><span class="s">'</span>
        <span class="n">indent</span><span class="o">=</span><span class="s">''</span>
<span class="mi">5</span> <span class="o">-----------------------------------------------------</span>
<span class="n">CommentNode</span><span class="p">()</span>
  <span class="c1"># identifiers: comment, comment_, commentnode
</span>  <span class="n">value</span><span class="o">=</span><span class="s">u'# a = 1'</span>
<span class="mi">6</span> <span class="o">-----------------------------------------------------</span>
<span class="n">EndlNode</span><span class="p">()</span>
  <span class="c1"># identifiers: endl, endl_, endlnode
</span>  <span class="n">value</span><span class="o">=</span><span class="s">u'</span><span class="se">\n</span><span class="s">'</span>
  <span class="n">indent</span><span class="o">=</span><span class="s">''</span>
<span class="mi">7</span> <span class="o">-----------------------------------------------------</span>
<span class="n">CommentNode</span><span class="p">()</span>
  <span class="c1"># identifiers: comment, comment_, commentnode
</span>  <span class="n">value</span><span class="o">=</span><span class="s">u'# cmt'</span>
<span class="mi">8</span> <span class="o">-----------------------------------------------------</span>
<span class="n">EndlNode</span><span class="p">()</span>
  <span class="c1"># identifiers: endl, endl_, endlnode
</span>  <span class="n">value</span><span class="o">=</span><span class="s">u'</span><span class="se">\n</span><span class="s">'</span>
  <span class="n">indent</span><span class="o">=</span><span class="s">''</span>
<span class="mi">9</span> <span class="o">-----------------------------------------------------</span>
<span class="n">EndlNode</span><span class="p">()</span>
  <span class="c1"># identifiers: endl, endl_, endlnode
</span>  <span class="n">value</span><span class="o">=</span><span class="s">u'</span><span class="se">\n</span><span class="s">'</span>
  <span class="n">indent</span><span class="o">=</span><span class="s">''</span>
<span class="mi">10</span> <span class="o">-----------------------------------------------------</span>
<span class="n">IfelseblockNode</span><span class="p">()</span>
  <span class="c1"># identifiers: ifelseblock, ifelseblock_, ifelseblocknode
</span>  <span class="n">value</span> <span class="o">-&gt;</span>
    <span class="o">*</span> <span class="n">IfNode</span><span class="p">()</span>
        <span class="c1"># identifiers: if, if_, ifnode
</span>        <span class="n">test</span> <span class="o">-&gt;</span>
          <span class="n">ComparisonNode</span><span class="p">()</span>
            <span class="c1"># identifiers: comparison, comparison_, comparisonnode
</span>            <span class="n">first</span> <span class="o">-&gt;</span>
              <span class="n">NameNode</span><span class="p">()</span>
                <span class="c1"># identifiers: name, name_, namenode
</span>                <span class="n">value</span><span class="o">=</span><span class="s">u'__name__'</span>
            <span class="n">value</span> <span class="o">-&gt;</span>
              <span class="n">ComparisonOperatorNode</span><span class="p">()</span>
                <span class="c1"># identifiers: comparison_operator, comparison_operator_, comparisonoperator, comparisonoperatornode
</span>                <span class="n">first</span><span class="o">=</span><span class="s">u'=='</span>
                <span class="n">second</span><span class="o">=</span><span class="s">''</span>
            <span class="n">second</span> <span class="o">-&gt;</span>
              <span class="n">StringNode</span><span class="p">()</span>
                <span class="c1"># identifiers: string, string_, stringnode
</span>                <span class="n">value</span><span class="o">=</span><span class="s">u'"__main__"'</span>
        <span class="n">value</span> <span class="o">-&gt;</span>
          <span class="o">*</span> <span class="n">AtomtrailersNode</span><span class="p">()</span>
              <span class="c1"># identifiers: atomtrailers, atomtrailers_, atomtrailersnode
</span>              <span class="n">value</span> <span class="o">-&gt;</span>
                <span class="o">*</span> <span class="n">NameNode</span><span class="p">()</span>
                    <span class="c1"># identifiers: name, name_, namenode
</span>                    <span class="n">value</span><span class="o">=</span><span class="s">u'main'</span>
                <span class="o">*</span> <span class="n">CallNode</span><span class="p">()</span>
                    <span class="c1"># identifiers: call, call_, callnode
</span>                    <span class="n">value</span> <span class="o">-&gt;</span>
<span class="bp">None</span>
<span class="c1">#!/usr/bin/env python
#! -*- coding: utf-8 -*-
</span><span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="c1"># comment before
</span>    <span class="k">print</span><span class="p">(</span><span class="s">"main"</span><span class="p">)</span> <span class="c1"># inline comment
</span>
    <span class="c1">#comment after
</span>
<span class="c1"># a = 1
# cmt
</span>
<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>




<span class="n">Process</span> <span class="n">finished</span> <span class="k">with</span> <span class="nb">exit</span> <span class="n">code</span> <span class="mi">0</span>
</code></pre></div></div>

<p>Looks correct. Some questions still exist but it’s the kind of hack or patch and it doesn’t break existent tests. Let’s call it solution. &lt;/br&gt;
Thus the result satisfies my expectations and requirements.&lt;/br&gt;
Thank you for reading and your time, dear reader!</p>
:ET